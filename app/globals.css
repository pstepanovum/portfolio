@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Custom Properties for Typography */
:root {
  /* Typography Scale - Using a modular scale of 1.2 (minor third) */
  --font-scale: 1.2;
  --text-xs: calc(var(--text-base) / var(--font-scale));
  --text-sm: var(--text-base);
  --text-md: calc(var(--text-base) * var(--font-scale));
  --text-lg: calc(var(--text-base) * var(--font-scale) * var(--font-scale));
  --text-xl: calc(var(--text-base) * var(--font-scale) * var(--font-scale) * var(--font-scale));
  
  /* Base Typography */
  --text-base: 1.1525rem;
  --line-height-tight: 1.2;
  --line-height-normal: 1.6;
  
  /* Letter Spacing */
  --tracking-tight: -0.02em;
  --tracking-normal: 0;
  --tracking-wide: 0.05em;
  
  /* Font Weights */
  --font-light: 300;
  --font-regular: 400;
  --font-semibold: 600;
  --font-bold: 700;
  --font-black: 900;
  
  /* Colors - Dark theme by default */
  --color-bg: #0a0a0a;
  --color-fg: #ededed;
  
  /* Animation Tokens */
  --transition-speed: 300ms;
  --transition-ease: cubic-bezier(0.4, 0, 0.2, 1);
  --transform-amount: 10px;
}

/* Light Theme Colors */
:root[class~="light"] {
  --color-bg: #ffffff;
  --color-fg: #171717;
}

/* Font Face Declarations */
@font-face {
  font-family: 'Realtime';
  src: url('/fonts/realtimetest-black.otf') format('opentype');
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  font-feature-settings: "salt" on, "ss01" on;
}

@font-face {
  font-family: 'Realtime';
  src: url('/fonts/realtimetest-bold.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
  font-feature-settings: "salt" on, "ss01" on;
}

@font-face {
  font-family: 'Realtime';
  src: url('/fonts/realtimetest-light.otf') format('opentype');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
  font-feature-settings: "salt" on, "ss01" on;
}

@font-face {
  font-family: 'Realtime';
  src: url('/fonts/realtimetest-regular.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  font-feature-settings: "salt" on, "ss01" on;
}

@font-face {
  font-family: 'Realtime';
  src: url('/fonts/realtimetest-semibold.otf') format('opentype');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
  font-feature-settings: "salt" on, "ss01" on;
}

/* Base Styles */
@layer base {
  html {
    font-size: var(--text-base);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }

  body {
    color: var(--color-fg);
    background: var(--color-bg);
    font-family: 'Realtime', Arial, Helvetica, sans-serif;
    line-height: var(--line-height-normal);
  }

  /* Heading Styles using CSS Custom Properties */
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Realtime', Arial, Helvetica, sans-serif;
    font-weight: var(--font-bold);
    letter-spacing: var(--tracking-tight);
    line-height: var(--line-height-tight);
  }

  h1 { font-size: var(--text-xl); }
  h2 { font-size: var(--text-lg); }
  h3 { font-size: var(--text-md); }

  p, a, button, span {
    font-family: 'Realtime', Arial, Helvetica, sans-serif;
    font-weight: var(--font-regular);
  }

  p {
    margin-block-end: 1.5em;
  }
}

/* Utility Classes */
@layer utilities {
  .font-black {
    font-weight: var(--font-black);
    letter-spacing: var(--tracking-tight);
  }

  .font-bold {
    font-weight: var(--font-bold);
    letter-spacing: var(--tracking-tight);
  }

  .font-light {
    font-weight: var(--font-light);
    letter-spacing: var(--tracking-wide);
  }

  .font-regular {
    font-weight: var(--font-regular);
    letter-spacing: var(--tracking-normal);
  }

  .font-semibold {
    font-weight: var(--font-semibold);
    letter-spacing: var(--tracking-tight);
  }
}

/* Animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(var(--transform-amount));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(calc(var(--transform-amount) * -1));
  }
}

/* Page Transitions */
.page-transition-enter {
  animation: fadeInUp var(--transition-speed) var(--transition-ease);
}

.page-transition-exit {
  animation: fadeOutUp var(--transition-speed) var(--transition-ease);
}

/* Theme Toggle */
.theme-toggle {
  opacity: 0;
  transform: translateY(var(--transform-amount));
  transition: opacity var(--transition-speed) var(--transition-ease),
              transform var(--transition-speed) var(--transition-ease);
}

.mounted .theme-toggle {
  opacity: 1;
  transform: translateY(0);
}

